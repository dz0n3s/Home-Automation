
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
sensor: !include sensors.yaml

homeassistant:
  name: Home
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  elevation: !secret home_elevation
  unit_system: metric
  time_zone: "Africa/Johannesburg"
  whitelist_external_dirs:
    - /tmp
  customize: !include customize.yaml

logger:
  default: warning

lovelace:
  mode: yaml
  resources:
    - url: /local/button-card.js
      type: module
    - url: /local/fold-entity-row.js
      type: module
    - url: /local/mini-graph-card-bundle.js
      type: module

apple_tv:

discovery:
#  ignore:
#    - homekit

homekit:
  name: Home Assistant
  filter:
    include_entities:
      - input_boolean.pieter_present
      - input_boolean.rouve_present
      - input_boolean.guest_mode
      - input_boolean.contractor_mode
      - input_boolean.pieter_driving
      - light.smart_bulb_1
      - light.smart_bulb_2
      - light.smart_bulb_3
      - light.smart_bulb_4
      - cover.main_gate

ios:
  push:
    categories:
      - name: Contractor Mode Still Enabled Alert
        identifier: "contractor_mode_still_enabled_alert"
        actions:
          - identifier: "DISABLE_CONTRACTOR_MODE"
            title: "Disable"
            # activationMode: "background"
            # authenticationRequired: true
            # behavior: "default"
      - name: Contractor Mode Enabled
        identifier: "contractor_mode_enabled"
        actions:
          - identifier: "DISABLE_CONTRACTOR_MODE"
            title: "Disable"
      - name: Contractor Mode Disabled
        identifier: "contractor_mode_disabled"
        actions:
          - identifier: "ENABLE_CONTRACTOR_MODE"
            title: "Enable"
      - name: Main Gate Open
        identifier: "main_gate_open"
        actions:
          - identifier: "CLOSE_MAIN_GATE"
            title: "Close"
          # do nothing with this: the default 2 min will count down
          - identifier: "EXTEND_MAIN_GATE_TIMEOUT_2_MIN"
            title: "Wait 2 min"            
          - identifier: "EXTEND_MAIN_GATE_TIMEOUT_10_MIN"
            title: "Wait 10 min"
      - name: Test
        identifier: 'test'
        actions:
          - identifier: 'TEST'
            title: 'Test Action'

zone:
  - name: Home
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    radius: 22
    icon: mdi:home

stream:

camera:
  - platform: ffmpeg
    name: security_camera
    input: -rtsp_transport tcp -i rtsp://localhost:8554/unicast
    extra_arguments: "-vf hue=s=0"
  - platform: local_file
    name: security_camera_last_snapshot
    file_path: /home/homeassistant/.homeassistant/www/camera.security_camera_last.jpg

notify:
  - name: family
    platform: group
    services:
      - service: mobile_app_ceres
      - service: mobile_app_rouve

input_boolean:
  pieter_present:
    name: Pieter Presence
    icon: mdi:account
    #initial: ???
  rouve_present:
    name: Rouvé Presence
    icon: mdi:account
  guest_mode:
    name: Guest Mode
    icon: mdi:briefcase
  contractor_mode:
    name: Contractor Mode
    icon: mdi:worker
  # this gets set by a shortcuts automation on ios – what sucks is that it doesn't happen automatically
  pieter_driving:
    name: Pieter Driving
    icon: mdi:car

input_datetime:
  security_camera_last_snapshot:
    has_date: true
    has_time: true

binary_sensor:
  - platform: rpi_gpio
    ports:
      23: motion_sensor 
  - platform: template
    sensors:
      pieter_present:
        friendly_name: "Pieter Present"
        value_template: >- 
          {{ is_state("input_boolean.pieter_present", "on") or 
             is_state("person.pieter_rautenbach", "home") }}
      rouve_present:
        friendly_name: "Rouvé Present"
        value_template: >-
          {{ is_state("input_boolean.rouve_present", "on") or 
             is_state("person.rouve_rautenbach", "home") }}
      contractor_mode:
        friendly_name: "Contractor Mode"
        value_template: >-
          {{ is_state("input_boolean.contractor_mode", "on") }}
      anybody_home:
        friendly_name: "Anybody Home"
        value_template: >- 
          {{ is_state("input_boolean.pieter_present", "on") or is_state("input_boolean.rouve_present", "on") or 
             is_state("input_boolean.guest_mode", "on") or is_state("input_boolean.contractor_mode", "on") }} 
      pieter_driving:
        friendly_name: "Pieter Driving"
        value_template: >- 
          {{ is_state("input_boolean.pieter_driving", "on") }}
  - platform: ping
    name: Internet
    host: www.google.com
    count: 5
    scan_interval: 300

tplink:
  # discovery: true
  discovery: false
  light:
    - host: 192.168.0.108  # smart bulb 1
    - host: 192.168.0.116  # smart bulb 2
  switch:
    - host: 192.168.0.115  # smart plug 1

python_script:
# https://raw.githubusercontent.com/bieniu/ha-shellies-discovery/master/python_scripts/shellies_discovery.py

switch:
  - platform: rpi_gpio
    ports: 
      24: motion_led
  - platform: broadlink
    host: !secret broadlink_host
    mac: "C8:F7:42:40:01:F8"
  - platform: template
    switches:
      guest_mode:
        value_template: "{{ is_state('input_boolean.guest_mode', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.guest_mode
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.guest_mode
      contractor_mode:
        value_template: "{{ is_state('input_boolean.contractor_mode', 'on') }}"
        turn_on:
          - service: input_boolean.turn_on
            entity_id: input_boolean.contractor_mode
        turn_off:
          - service: input_boolean.turn_off
            entity_id: input_boolean.contractor_mode

light:
  - platform: switch
    name: living_room_lamp
    entity_id: switch.living_room_lamp

device_tracker:
  # https://community.home-assistant.io/t/device-tracker-home-interval-or-consider-home/84383/6
  - platform: nmap_tracker
    hosts: 192.168.0.0/24
    interval_seconds: 300 # scan interval
    #home_interval: 5 # minutes (scan interval)
    consider_home: 900 # seconds (timeout)
    new_device_defaults:
      track_new_devices: true

shell_command:
  noop: ":"
  copy_last_snapshot_image: "cp `ls -t /tmp/camera.security_camera_*.jpg | head -n1` /home/homeassistant/.homeassistant/www/camera.security_camera_last.jpg"
  # todo: only keep n vids/pics
  copy_snapshots_and_videos_to_gallery: "cp /tmp/camera.security_camera_*.* /home/homeassistant/.homeassistant/www/gallery/"

timer:
  motion_timer:
    duration: "00:05:00"
  main_gate_timer:
    duration: "00:02:00"

input_number:
  wan_traffic_delta_in:
    min: 0
    max: 4294967295
  wan_traffic_delta_out:
    min: 0
    max: 4294967295

utility_meter:
  daily_internet_usage_in:
    source: sensor.internet_usage_in
    cycle: daily
  daily_internet_usage_out:
    source: sensor.internet_usage_out
    cycle: daily
  monthly_internet_usage_in:
    source: sensor.internet_usage_in
    cycle: monthly
  monthly_internet_usage_out:
    source: sensor.internet_usage_out
    cycle: monthly

cover:
  - platform: template
    covers:
      main_gate:
        friendly_name: "Main Gate"
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.gate_remote
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.gate_remote
        stop_cover:
          service: switch.turn_on
          data:
            entity_id: switch.gate_remote
        value_template: "{{ is_state('binary_sensor.gate_status', 'on') }}"
        icon_template: >-
          {% if is_state('binary_sensor.gate_status', 'on') %}
            mdi:gate-open
          {% else %}
            mdi:gate
          {% endif %}
  - platform: template
    covers:
      main_gate:
        friendly_name: "LHS Garage Door"
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.lhs_garage_door_remote
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.lhs_garage_door_remote
        stop_cover:
          service: switch.turn_on
          data:
            entity_id: switch.lhs_garage_door_remote
        value_template: "{{ is_state('binary_sensor.lhs_garage_door_status', 'on') }}"
        icon_template: >-
          {% if is_state('binary_sensor.lhs_garage_door_status', 'on') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}
  - platform: template
    covers:
      main_gate:
        friendly_name: "RHS Garage Door"
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.rhs_garage_door_remote
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.rhs_garage_door_remote
        stop_cover:
          service: switch.turn_on
          data:
            entity_id: switch.rhs_garage_door_remote
        value_template: "{{ is_state('binary_sensor.rhs_garage_door_status', 'on') }}"
        icon_template: >-
          {% if is_state('binary_sensor.rhs_garage_door_status', 'on') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}
