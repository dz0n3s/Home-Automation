- alias: "Take Motion Snapshots"
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor
    to: "on"
  action:
    - service: script.turn_on
      entity_id: script.security_camera_create_snapshot
- alias: "Switch On Living Room Lamp if Motion is Detected"
  # only at night though
  initial_state: false
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor
    to: "on"
  condition:
    # use or, because, you can't be after sunset AND before sunrise ON THE SAME DAY
    - condition: or
      conditions:
        - condition: sun
          after: sunset
          after_offset: "-02:00:00"
        - condition: sun
          before: sunrise
          before_offset: "-00:30:00"
  action:
    - service: switch.turn_on
      entity_id: switch.living_room_lamp
    - service: timer.start
      data:
        entity_id: timer.motion_timer
- alias: "Switch Off Living Room Lamp When Timer Expires"
  initial_state: true
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.motion_timer
  action:
    - service: switch.turn_off
      entity_id: switch.living_room_lamp
- alias: "Motion Indicator On"
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor
    to: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.motion_led
- alias: "Motion Indicator Off"
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor
    to: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.motion_led
- alias: "Living Room Lamp Auto On Upon Sunset or Arrival"
  initial_state: true
  trigger:
    - platform: sun
      event: sunset
      offset: "-01:00:00"
    - platform: state
      entity_id: binary_sensor.anybody_home
      to: "on"
      #entity_id: person.pieter_rautenbach #group.anyone
      #to: "home"
  condition:
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: "on"
      #entity_id: person.pieter_rautenbach #group.anyone
      #state: "home"
    # use or, because, you can't be after sunset AND before sunrise ON THE SAME DAY
    - condition: or
      conditions:
        - condition: sun
          after: sunset
          after_offset: "-01:00:00"
        - condition: sun
          before: sunrise
          before_offset: "-01:00:00"
  action:
    - service: switch.turn_on #homeassistant.turn_on > for group
      entity_id: switch.living_room_lamp
- alias: "Bedlamps Auto On Upon Sunset or Arrival"
  initial_state: true
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:30:00"
    - platform: state
      entity_id: binary_sensor.anybody_home
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: "on"
    # use or, because, you can't be after sunset AND before sunrise ON THE SAME DAY
    - condition: or
      conditions:
        - condition: sun
          after: sunset
          after_offset: "-00:30:00"
        - condition: sun
          before: sunrise
  action:
    - service: homeassistant.turn_on
      entity_id: group.main_bedroom
- alias: "Lights Off After Sunrise"
  initial_state: true
  trigger:
    - platform: sun
      event: sunrise
      offset: "01:00:00"
  condition:
    - condition: sun
      after: sunrise
      after_offset: "01:00:00"
  action:
    - service: homeassistant.turn_off
      entity_id: group.main_bedroom
    - service: switch.turn_off
      entity_id: switch.living_room_lamp
- alias: "Away Mode"
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.anybody_home
    to: "off"
    #entity_id: person.pieter_rautenbach #group.all_devices
    #to: 'not_home'
  condition:
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: "off"
  action:
    # - service: switch.turn_off
    #   entity_id: switch.living_room_lamp
    - service: light.turn_off
      entity_id: all
    - service: automation.turn_on
      entity_id: automation.take_motion_snapshots
    - service: automation.turn_on
      entity_id: automation.switch_on_living_room_lamp_if_motion_is_detected
- alias: "Home Mode"
  trigger:
    platform: state
    entity_id: binary_sensor.anybody_home
    to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: "on"
  action:
    - service: automation.turn_off
      entity_id: automation.take_motion_snapshots
    - service: automation.turn_off
      entity_id: automation.switch_on_living_room_lamp_if_motion_is_detected
- alias: "Open The Gate When Arriving Home"
  trigger:
    - platform: state
      entity_id: binary_sensor.pieter_present
      to: "on"
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: cover.main_gate
          state: "closed"
        - condition: time
          after: "07:00:00"
          before: "22:00:00"
  action:
    - service: cover.open_cover
      entity_id: cover.main_gate
- alias: "Check Disk Space on the Home Assistant server"
  trigger:
    - platform: time_pattern
      hours: "*"
      minutes: 0
      seconds: 0
  condition:
    - condition: numeric_state
      entity_id: sensor.disk_use_percent
      above: 90
  action:
    - service: notify.mobile_app_ceres
      data_template:
        title: "System"
        message: "Server disk usage is exceeding {{ trigger.above }}%!"
- alias: "Contractor Mode Enabled Alert"
  trigger: 
    - platform: state
      entity_id: switch.contractor_mode
      to: "on"
  action:
    - service: notify.mobile_app_ceres
      data:
        title: "Special Mode"
        message: "Contractor mode enabled."
        data:
          push:
            category: "contractor_mode_enabled"
- alias: "Contractor Mode Disabled Alert"
  trigger: 
    - platform: state
      entity_id: switch.contractor_mode
      to: "off"
  action:
    - service: notify.mobile_app_ceres
      data:
        title: "Special Mode"
        message: "Contractor mode disabled."
        data:
          push:
            category: "contractor_mode_disabled"
- alias: "Enable Contractor Mode"
  trigger:
    - platform: time
      at: "07:00:00"
  condition:
    - condition: time
      after: "07:00:00"
      weekday:
        - wed
  action:
    - service: switch.turn_on
      entity_id: switch.contractor_mode
- alias: "Disable Contractor Mode"
  trigger:
    - platform: time
      at: "16:00:00"
  condition:
    - condition: time
      after: "16:00:00"
      weekday:
        - wed
  action:
    - service: switch.turn_off
      entity_id: switch.contractor_mode
- alias: "Contractor Mode Still Enabled Alert"
  trigger:
    - platform: time_pattern
      hours: "*"
      minutes: 0
      seconds: 0
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: switch.contractor_mode
          state: "on"
        - condition: time
          after: "17:00:00"
          before: "21:00:00"
  action:
    - service: notify.mobile_app_ceres
      data:
        title: "Special Mode"
        message: "Contractor mode is still enabled."
        data:
          push:
            category: "contractor_mode_still_enabled_alert"
- alias: "Disable Contractor Mode From Alert Action"
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: DISABLE_CONTRACTOR_MODE
  action:
    - service: switch.turn_off
      entity_id: switch.contractor_mode  
- alias: "Enable Contractor Mode From Alert Action"
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: ENABLE_CONTRACTOR_MODE
  action:
    - service: switch.turn_on
      entity_id: switch.contractor_mode  
- alias: "Shellies Announce"
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: mqtt.publish
    data:
      topic: shellies/command
      payload: announce
- alias: "Shellies Discovery"
  trigger:
    - platform: mqtt
      topic: shellies/announce
  action:
    service: python_script.shellies_discovery
    data_template:
      id: '{{ trigger.payload_json.id }}'
      mac: '{{ trigger.payload_json.mac }}'
      fw_ver: '{{ trigger.payload_json.fw_ver }}'
# https://community.home-assistant.io/t/snmp-bandwidth-monitor/7122
- alias: "Monitor Inbound Internet Traffic"
  trigger:
    platform: state
    entity_id: sensor.snmp_wan_in
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.wan_traffic_delta_in
        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'
- alias: "Monitor Outbound Internet Traffic"
  trigger:
    platform: state
    entity_id: sensor.snmp_wan_out
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.wan_traffic_delta_out
        value: '{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}'
- alias: "Notify Pieter Going Home from Work in Cape Town"
  trigger:
    platform: zone
    entity_id: person.pieter_rautenbach
    zone: zone.pieter_work_cape_town
    event: leave
  condition:
    - condition: time
      after: "16:00:00"
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: script.turn_on
      entity_id: script.send_pieter_work_cape_town_to_home_eta
- alias: "Start Main Gate Timer When Opened"
  initial_state: true
  trigger:
    platform: state
    entity_id: cover.main_gate
    to: "open"
  action:
    - service: timer.start
      data:
        entity_id: timer.main_gate_timer
- alias: "Main Gate Left Open Alert"
  initial_state: true
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.main_gate_timer
    - platform: state
      entity_id: binary_sensor.anybody_home
      to: "off"
  condition:
    - condition: state
      entity_id: cover.main_gate
      state: "open"
  action:
    # https://companion.home-assistant.io/docs/notifications/critical-notifications/
    - service: notify.mobile_app_ceres
      data:
        title: "Security"
        message: "The main gate has been left open for too long."
        data:
          push:
            category: "main_gate_open"
    - service: timer.start
      data:
        entity_id: timer.main_gate_timer
- alias: "Close Main Gate From Alert Action"
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: CLOSE_MAIN_GATE
  action:
    - service: cover.close_cover
      entity_id: cover.main_gate
- alias: "Stop Main Gate Timer When Closed"
  initial_state: true
  trigger:
    platform: state
    entity_id: cover.main_gate
    to: "closed"
  action:
    - service: timer.cancel
      data:
        entity_id: timer.main_gate_timer
- alias: "Notify If Server Load High"
  trigger:
    platform: numeric_state
    entity_id: sensor.load_15m
    above: 1
    for: 
      minutes: 5
  action:
    - service: notify.mobile_app_ceres
      data_template:
        title: "System"
        # https://community.home-assistant.io/t/convert-trigger-for-into-a-relative-age/196979
        message: "The server load has been {{ states('sensor.load_15m') }} for {{ trigger.for.seconds / 60 }} minutes."
